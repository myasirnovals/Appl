@startuml
actor User
participant "PaymentPage" as UI
participant "PaymentController" as Controller
participant "PaymentService" as Service
participant "Booking" as BookingEntity
participant "Payment" as PaymentEntity
participant "PaymentGateway" as Gateway

User -> UI : Buka halaman pembayaran (booking)
UI -> Controller : getBookingDetail(bookingId)
Controller -> Service : fetchBookingDetail(bookingId)
Service -> BookingEntity : getBooking(bookingId)
BookingEntity --> Service : bookingDetail
Service -> Controller : bookingDetail
Controller -> UI : bookingDetail
UI -> User : tampilkan detail booking & total bayar

User -> UI : Pilih metode dan lakukan pembayaran
UI -> Controller : processPayment(bookingId, metode, data)
Controller -> Service : processPayment(bookingId, metode, data)
alt Jika menggunakan payment gateway
    Service -> Gateway : requestPayment(bookingId, amount, data)
    Gateway --> Service : paymentResponse
    Service -> PaymentEntity : insertPayment(bookingId, paymentResponse)
    PaymentEntity --> Service : result
    Service -> BookingEntity : updateStatus(bookingId, "Sudah Dibayar")
    BookingEntity --> Service : result
    Service -> Controller : paymentSuccess
    Controller -> UI : paymentSuccess
    UI -> User : tampilkan konfirmasi pembayaran
else Jika transfer manual
    Service -> PaymentEntity : insertPayment(bookingId, data)
    PaymentEntity --> Service : result
    Service -> BookingEntity : updateStatus(bookingId, "Menunggu Konfirmasi")
    BookingEntity --> Service : result
    Service -> Controller : paymentPending
    Controller -> UI : paymentPending
    UI -> User : tampilkan status menunggu konfirmasi
end
@enduml
