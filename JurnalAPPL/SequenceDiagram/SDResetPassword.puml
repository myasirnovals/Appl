@startuml
actor User
participant "ForgotPasswordPage" as ForgotUI
participant "AuthController" as Controller
participant "AuthService" as Service
participant "User" as Entity
participant "EmailService" as Email
participant "ResetPasswordPage" as ResetUI

User -> ForgotUI : Buka halaman lupa password
User -> ForgotUI : Input email/username\nKlik Kirim
ForgotUI -> Controller : requestReset(email)
Controller -> Service : processResetRequest(email)
Service -> Entity : findByEmail(email)
alt User ditemukan
    Entity --> Service : userData
    Service -> Service : generateResetToken()
    Service -> Entity : saveResetToken(userData, token)
    Service -> Email : sendResetLink(email, token)
    Email --> Service : emailSent
    Service -> Controller : resetLinkSent()
    Controller -> ForgotUI : Tampilkan pesan cek email
else User tidak ditemukan
    Service -> Controller : resetFailed(error)
    Controller -> ForgotUI : Tampilkan pesan error
end

== User klik link reset di email ==
User -> ResetUI : Buka link reset (token)
ResetUI -> Controller : validateToken(token)
Controller -> Service : validateResetToken(token)
alt Token valid
    Service -> Controller : tokenValid()
    Controller -> ResetUI : Tampilkan form password baru
    User -> ResetUI : Input password baru\nKlik Reset
    ResetUI -> Controller : submitNewPassword(token, newPassword)
    Controller -> Service : updatePassword(token, newPassword)
    Service -> Entity : updatePassword(userData, newPassword)
    Entity --> Service : passwordUpdated
    Service -> Controller : resetSuccess()
    Controller -> ResetUI : Tampilkan pesan sukses
else Token tidak valid/expired
    Service -> Controller : tokenInvalid()
    Controller -> ResetUI : Tampilkan pesan error
end
@enduml
