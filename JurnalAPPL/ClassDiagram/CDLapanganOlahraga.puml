@startuml
!theme plain

' Class for User
class User {
  + idUser: Integer
  - namaUser: String
  - email: String
  - password: String
  - noTelp: String
  - alamat: String
  - role: String
  --
  + login(): Boolean
  + logout(): void
  + updateProfile(): Boolean
  + changePassword(): Boolean
}

' Class for Pesanan (Booking)
class Pesanan {
  + idPemesanan: Integer
  - tanggalMemesan: Date
  - startTime: Time
  - endTime: Time
  - statusPemesanan: String
  - totalHarga: Double
  --
  + create(): Boolean
  + confirm(): Boolean
  + cancel(): Boolean
  + updateStatus(): Boolean
  + calculateTotalPrice(): Double
  + checkOverlap(): Boolean
}

' Class for Pembayaran (Payment)
class Pembayaran {
  + idPembayaran: Integer
  - tanggalPembayaran: Date
  - statusPembayaran: String
  - jumlah: Double
  - metode: String
  --
  + processPayment(): Boolean
  + verifyPayment(): Boolean
  + refund(): Boolean
  + generateInvoice(): Invoice
}

' Class for Lapangan (Field)
class Lapangan {
  + idLapangan: Integer
  - namaLapangan: String
  - tipeLapangan: String
  - lokasiLapangan: String
  - statusLapangan: String
  - hargaPerJam: Double
  --
  + create(): Boolean
  + update(): Boolean
  + delete(): Boolean
  + getAvailableSlots(): List<TimeSlot>
  + updateStatus(): Boolean
}

' Class for Maintenance
class Maintenance {
  + id_maintenance: Integer
  - deskripsi: String
  - tanggalTerjadwal: Date
  - statusMaintenance: String
  --
  + create(): Boolean
  + update(): Boolean
  + complete(): Boolean
}

' Class for Notifikasi (Notification)
class Notifikasi {
  + idNotifikasi: Integer
  - pesanNotifikasi: String
  - sentAt: DateTime
  - tipeNotifikasi: String
  --
  + create(): Boolean
  + send(): Boolean
  + markAsRead(): Boolean
}

' Additional Supporting Classes (implicitly used by methods)
class TimeSlot {
  - jamMulai: Time
  - jamSelesai: Time
  - available: Boolean
  + getDuration(): Integer
}

class Invoice {
  - invoiceId: Integer
  - invoiceNumber: String
  - issueDate: Date
  - totalAmount: Double
  + generateNumber(): String
  + print(): Boolean
}

' Relationships / Associations
User "1" -- "0..*" Pesanan : Membuat
Pesanan "1" -- "1" Pembayaran : Memiliki
Pesanan "0..*" -- "1" Lapangan : Memesan
Lapangan "1" -- "0..*" Maintenance : Memelihara
User "1" -- "0..*" Notifikasi : Menerima

@enduml